{"version":3,"file":"otp-verification.mjs","sources":["../../../projects/otp-verification/src/lib/otp-verification.service.ts","../../../projects/otp-verification/src/lib/otp-verification.component.ts","../../../projects/otp-verification/src/public-api.ts","../../../projects/otp-verification/src/otp-verification.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OtpVerificationService {\r\n  // private apiUrl = 'https://your-backend-api.com/otp'; \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  sendOtp(email: string): Observable<any> {\r\n    // return this.http.post(`${this.apiUrl}/send`, { email });\r\n    return of('Hello')\r\n  }\r\n\r\n  verifyOtp(email: string, otp: string): Observable<any> {\r\n  alert('hit')\r\n    const validOtp = '123456';\r\n\r\n    if (otp === validOtp) {\r\n      return of({ success: true, message: 'OTP verified successfully' });\r\n    } else {\r\n      return of({ success: false, message: 'Invalid OTP. Please try again.' });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\n// import { OtpVerificationService } from './otp-verification.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { OtpVerificationService } from './otp-verification.service';\r\n\r\n@Component({\r\n  selector: 'lib-otp-verification',\r\n  standalone: true,\r\n  imports: [FormsModule, ReactiveFormsModule, CommonModule,HttpClientModule],\r\n  providers: [OtpVerificationService],\r\n  template: `\r\n   <form [formGroup]=\"otpForm\" class=\"otp-form\">\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email:</label>\r\n    <input id=\"email\" formControlName=\"email\" type=\"email\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"otp\">OTP:</label>\r\n    <input id=\"otp\" formControlName=\"otp\" type=\"text\">\r\n  </div>\r\n  <button class=\"btn btn-primary\"  [disabled]=\"!resendAllowed\" (click)=\"sendOtp()\">Send OTP</button>\r\n  <button class=\"btn btn-secondary\" (click)=\"verifyOtp()\">Verify OTP</button>\r\n  <div *ngIf=\"!resendAllowed\" class=\"countdown\">\r\n    Resend allowed in: {{ countdown }} seconds\r\n  </div>\r\n</form>\r\n\r\n  `,\r\n  styles: `\r\n  \r\n    /* Container for the form */\r\n.otp-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n/* General styling for form groups */\r\n.form-group {\r\n  margin-bottom: 16px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  font-size: 14px;\r\n  color: #333;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n/* Input fields */\r\ninput[type=\"email\"],\r\ninput[type=\"text\"] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  transition: border-color 0.2s ease;\r\n}\r\n\r\ninput[type=\"email\"]:focus,\r\ninput[type=\"text\"]:focus {\r\n  border-color: #007bff;\r\n  outline: none;\r\n}\r\n\r\n/* Buttons */\r\n.btn {\r\n  padding: 10px 20px;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  margin-right: 10px;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #6c757d;\r\n  color: #fff;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n/* Countdown timer */\r\n.countdown {\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n  color: #e63946;\r\n}\r\n\r\n/* Responsive design */\r\n@media (max-width: 480px) {\r\n  .otp-form {\r\n    padding: 15px;\r\n  }\r\n\r\n  .btn {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n  \r\n  `\r\n})\r\nexport class OtpVerificationComponent implements OnInit {\r\n\r\n  otpForm: FormGroup;\r\n  resendAllowed: boolean = true;\r\n  countdown: number = 60;\r\n\r\n  constructor(private fb: FormBuilder, private otpService: OtpVerificationService) {\r\n    this.otpForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      otp: ['', [Validators.required]]\r\n    });\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n  sendOtp(): void {\r\n    if (this.otpForm.valid) {\r\n      const email = this.otpForm.get('email')?.value;\r\n      this.resendAllowed = false;\r\n      this.otpService.sendOtp(email).subscribe(response => {\r\n        console.log('OTP sent');\r\n        this.startResendCountdown();\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  verifyOtp(): void {\r\n    if (this.otpForm.valid) {\r\n      const email = this.otpForm.get('email')?.value;\r\n      const otp = this.otpForm.get('otp')?.value;\r\n      console.log(email,otp)\r\n      this.otpService.verifyOtp(email, otp).subscribe(response => {\r\n        if (response.success) {\r\n          console.log(response.message);\r\n        } else {\r\n          console.log(response.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  startResendCountdown(): void {\r\n    this.resendAllowed = false;\r\n    this.countdown = 60;\r\n    const interval = setInterval(() => {\r\n      this.countdown--;\r\n      if (this.countdown <= 0) {\r\n        clearInterval(interval);\r\n        this.resendAllowed = true;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n}\r\n","/*\r\n * Public API Surface of otp-verification\r\n */\r\n\r\nexport * from './lib/otp-verification.service';\r\nexport * from './lib/otp-verification.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.OtpVerificationService"],"mappings":"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"}